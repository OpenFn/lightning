version: 2.1

orbs:
  codecov: codecov/codecov@1.0.5

commands:
  install_node:
    description: "Install NodeJS"
    parameters:
      version:
        type: string
    steps:
      - restore_cache:
          key: v4-nodejs-<< parameters.version >>

      - run:
          name: 'Install Node.js and npm'
          command: |
            ./bin/install_node --no-cleanup << parameters.version >>

      - save_cache:
          key: v4-nodejs-<< parameters.version >>
          paths:
            - ./node-v<< parameters.version >>-linux-x64.tar.gz

      - run:
          name: 'Cleanup NodeJS install files'
          command: |
            rm ./node-v*.tar.gz

jobs:
  build:
    parameters:
      elixir_version:
        description: Elixir version
        type: string
        default: "1.15.4" # Looks like it's pinned at OTP26
      nodejs_version:
        description: NodeJS version
        type: string
        default: "18.17.1"
      execute:
        description: What steps to execute after build
        type: steps

    parallelism: 1
    docker:
      - image: elixir:<< parameters.elixir_version >>
      - image: cimg/postgres:15.3

    steps:
      - checkout
      - install_node:
          version: << parameters.nodejs_version >>

      - restore_cache:
          keys:
            - v1-deps-<< parameters.elixir_version >>-{{ checksum "mix.lock" }}
            - v1-deps-<< parameters.elixir_version >>-

      - run: mix local.hex --force
      - run: mix local.rebar --force
      - run: cd assets && npm install
      - run: MIX_ENV=test mix do deps.get --only test, deps.compile, compile
      - run: MIX_ENV=test mix lightning.install_runtime

      - save_cache:
          key: v1-deps-<< parameters.elixir_version >>-{{ checksum "mix.lock" }}
          paths:
            - _build
            - deps
            - ~/.mix

      - restore_cache:
          keys:
            - v1-plt-<< parameters.elixir_version >>-{{ checksum "mix.lock" }}
            - v1-plt-<< parameters.elixir_version >>-
      - run: MIX_ENV=test mix dialyzer --plt
      - save_cache:
          key: v1-plt-<< parameters.elixir_version >>-{{ checksum "mix.lock" }}
          paths:
            - priv/plts
            - ~/.mix

      - steps: << parameters.execute >>

workflows:
  pre-flight checks:
    jobs:
      - build:
          name: 'Check code formatting'
          execute:
            - run: MIX_ENV=test mix format --check-formatted
      - build:
          name: 'Check code style'
          execute:
            - run: MIX_ENV=test mix credo --all
      - build:
          name: 'Type check'
          execute:
            - run: MIX_ENV=test mix dialyzer
      - build:
          name: 'Check for security vulnerabilities'
          execute:
            - run: MIX_ENV=test mix sobelow
      - build:
          name: 'Check Elixir tests (codecov)'
          execute:
            - run: MIX_ENV=test mix do ecto.create, ecto.migrate
            - run:
                command: MIX_ENV=test mix coveralls.json -o ./test/reports
            - codecov/upload:
                file: test/reports/excoveralls.json
            - store_test_results:
                path: test/reports/
      - build:
          name: 'Check Javascript tests'
          execute:
            - run: cd assets && npm install && npm run test-report
