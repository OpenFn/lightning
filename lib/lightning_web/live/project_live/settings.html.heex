<LayoutComponents.page_content>
  <:banner>
    <Common.dynamic_component
      :if={assigns[:banner]}
      function={@banner.function}
      args={@banner.attrs}
    />
  </:banner>
  <:header>
    <LayoutComponents.header current_user={@current_user} project={@project}>
      <:title>{@page_title}</:title>
    </LayoutComponents.header>
  </:header>
  <LayoutComponents.centered>
    <LightningWeb.Components.Tabbed.container
      id="project-settings-container"
      orientation="vertical"
      default_hash="project"
      class=""
    >
      <:tab hash="project">
        <.icon name="hero-clipboard" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Setup</span>
      </:tab>
      <:tab hash="credentials">
        <.icon name="hero-key" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Credentials</span>
      </:tab>
      <:tab hash="collections">
        <.icon name="hero-circle-stack" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Collections</span>
      </:tab>
      <:tab hash="webhook_security">
        <.icon name="hero-lock-closed" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Webhook Security</span>
      </:tab>
      <:tab hash="collaboration">
        <.icon name="hero-users" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Collaboration</span>
      </:tab>
      <:tab hash="security">
        <.icon name="hero-lock-closed" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Security</span>
      </:tab>
      <:tab hash="vcs">
        <.icon name="hero-arrow-path" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Sync to GitHub</span>
      </:tab>
      <:tab hash="data-storage">
        <.icon name="hero-square-3-stack-3d" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">Data Storage</span>
      </:tab>
      <:tab hash="history-exports">
        <.icon name="hero-folder-arrow-down" class="h-5 w-5 inline-block mr-2" />
        <span class="inline-block align-middle">History Exports</span>
      </:tab>
      <:panel hash="project" class="space-y-4">
        <.section_header
          title="Project setup"
          subtitle="Projects are isolated workspaces that contain workflows, accessible to certain users."
          permissions_message="basic settings, but you can export a copy."
          can_perform_action={@can_edit_project}
        />
        <div class="space-y-4">
          <div class="bg-white p-4 rounded-md space-y-4">
            <div>
              <h6 class="font-medium text-black">
                Project Identity
              </h6>
              <small class="block my-1 text-xs text-gray-600">
                This metadata helps you identify the types of workflows managed in this project and the people that have access.
              </small>
            </div>
            <.form
              :let={f}
              for={@project_changeset}
              id="project-settings-form"
              phx-change="validate"
              phx-submit="save"
              class="space-y-4"
            >
              <div class="grid grid-cols gap-6">
                <div class="md:col-span-2">
                  <.input
                    type="text"
                    field={f[:name]}
                    disabled={!@can_edit_project}
                    label="Project name"
                  />
                </div>
              </div>
              <div class="grid grid-cols gap-6">
                <div class="md:col-span-2">
                  <.input
                    type="textarea"
                    field={f[:description]}
                    disabled={!@can_edit_project}
                    label="Project description"
                    class="mt-1 focus:ring-primary-500 focus:border-primary-500 block w-full shadow-xs sm:text-sm border-secondary-300 rounded-md"
                  />
                  <small class="mt-2 block text-xs text-gray-600">
                    A short description of a project [max 240 characters]
                  </small>
                </div>
              </div>
              <div class="grid grid-cols gap-6">
                <div class="md:col-span-2">
                  <.button
                    id="project-identity-submit-btn"
                    type="submit"
                    theme="primary"
                    disabled={!(@project_changeset.valid? and @can_edit_project)}
                  >
                    Save
                  </.button>
                </div>
              </div>
            </.form>
          </div>

          <div class="bg-white p-4 rounded-md space-y-4">
            <div>
              <h6 class="font-medium text-black">
                Concurrency Override
              </h6>
              <div class="@container">
                <div class="@sm:max-w-xl">
                  <p class="text-xs text-gray-600">
                    By default, runs are executed concurrently in accordance to limits set on individual workflows.
                    In some situations, you may want to prevent concurrent execution across all workflows in a project.
                  </p>
                  <p class="mt-2 text-xs text-gray-600">
                    Disabling parallel run execution ensures that only one run
                    is executed at a time, regardless of workflow, for this entire project.
                  </p>
                </div>
              </div>
            </div>
            <.form
              :let={f}
              for={@project_changeset}
              id="project-concurrency-form"
              phx-change="validate"
              phx-submit="save"
              class="space-y-4"
            >
              <div class="grid grid-cols md:col-span-2">
                <div class="flex items-center gap-x-4 justify-between">
                  <.live_component
                    :if={assigns[:concurrency_input_component]}
                    module={assigns[:concurrency_input_component]}
                    id="concucurrency-input-component"
                    field={f[:concurrency]}
                    project={@project}
                    disabled={not @can_edit_project}
                  />
                </div>
                <div></div>
                <div class="ml-2 mt-1"></div>
                <Common.alert
                  :if={
                    f[:concurrency].value == 1 and
                      Enum.any?(@project_changeset.changes)
                  }
                  id="heads-up-description"
                  type="warning"
                  header="Heads Up!"
                  class="mt-2"
                >
                  <:message>
                    <p>
                      Disabling parallel run execution may significantly reduce the
                      overall throughput of your project.
                    </p>
                  </:message>
                </Common.alert>
              </div>
              <div class="md:col-span-2">
                <.button
                  id="project-concurrency-submit-btn"
                  type="submit"
                  theme="primary"
                  disabled={
                    !(Enum.any?(@project_changeset.changes) and
                        @can_edit_project)
                  }
                >
                  Save
                </.button>
              </div>
            </.form>
          </div>

          <div class="bg-white p-4 rounded-md space-y-4">
            <div>
              <h6 class="font-medium text-black">Export your Project</h6>
              <p class="block my-1 text-xs text-gray-600">
                Export your project as code, to save this version or edit your project locally.
              </p>
            </div>
            <.button_link
              theme="primary"
              href={~p"/download/yaml?id=#{@project.id}"}
              target="_blank"
            >
              Export project
            </.button_link>
          </div>
          <%= if @can_delete_project do %>
            <div class="bg-white p-4 rounded-md space-y-4">
              <div>
                <h6 class="font-medium text-black">The danger zone</h6>
                <small class="block my-1 text-xs text-gray-600">
                  Deleting your project is irreversible
                </small>
              </div>
              <.button_link
                theme="danger"
                navigate={
                  Routes.project_project_settings_path(
                    @socket,
                    :delete,
                    @project.id
                  )
                }
              >
                Delete project
              </.button_link>
            </div>
          <% end %>

          <%= if @live_action == :delete and @can_delete_project do %>
            <.live_component
              module={LightningWeb.Components.ProjectDeletionModal}
              id={@project.id}
              project={@project}
              save_return_to={~p"/projects"}
              cancel_return_to={~p"/projects/#{@project.id}/settings"}
            />
          <% end %>
        </div>
      </:panel>
      <:panel hash="credentials" class="space-y-4">
        <.section_header
          title="Project credentials"
          subtitle="Manage OAuth 2.0 Clients and Credentials accessible to this project."
          permissions_message="available credentials."
          can_perform_action={@can_create_project_credential}
          action_button_text="Add new"
          action_button_id="options-menu-button"
          action_button_disabled={!@can_create_project_credential}
          options={[
            %{
              name: "Credential",
              id: "option-menu-item-1",
              target: "new-credential-modal"
            },
            %{
              name: "OAuth client",
              id: "option-menu-item-0",
              target: "new-oauth-client-modal",
              badge: "Advanced"
            }
          ]}
        />
        <div class="space-y-4">
          <LightningWeb.Components.DataTables.oauth_clients_table
            id="oauth-clients"
            title="OAuth Clients"
            clients={@oauth_clients}
            show_owner={true}
          >
            <:empty_state>
              <.empty_state
                icon="hero-plus-circle"
                message="No OAuth clients found."
                button_text="Create a new OAuth client"
                button_id="open-create-oauth-client-modal-big-buttton"
                button_click={show_modal("new-oauth-client-modal")}
                button_disabled={!@can_create_project_credential}
              />
            </:empty_state>
            <:actions :let={client}>
              <div :if={can_edit?(client, @current_user)}>
                <span>
                  <.link
                    class="table-action"
                    phx-click={
                      show_modal("edit-oauth-client-#{client.id}-modal")
                    }
                  >
                    Edit
                  </.link>
                </span>
                <span>
                  <.link
                    id={"delete-oauth-client-#{client.id}-button"}
                    class="table-action"
                    phx-click={
                      show_modal("delete_oauth_client_#{client.id}_modal")
                    }
                  >
                    Delete
                  </.link>
                </span>
              </div>
              <.live_component
                id={"edit-oauth-client-#{client.id}-modal"}
                module={LightningWeb.CredentialLive.OauthClientFormComponent}
                action={:edit}
                oauth_client={client}
                projects={@projects}
                project={@project}
                allow_global={@current_user.role === :superuser}
                can_create_oauth_client={@can_create_project_credential}
                return_to={~p"/projects/#{@project.id}/settings#credentials"}
              />
              <LightningWeb.Components.Credentials.delete_oauth_client_modal
                :if={client.user_id == @current_user.id}
                id={"delete_oauth_client_#{client.id}_modal"}
                client={client}
              />
            </:actions>
          </LightningWeb.Components.DataTables.oauth_clients_table>
          <LightningWeb.Components.DataTables.credentials_table
            id="credentials"
            title="Credentials"
            credentials={@credentials}
            show_owner={true}
          >
            <:empty_state>
              <.empty_state
                icon="hero-plus-circle"
                message="No credentials found."
                button_text="Create a new Credential"
                button_id="open-create-credential-modal-big-buttton"
                button_click={show_modal("new-credential-modal")}
                button_disabled={!@can_create_project_credential}
              />
            </:empty_state>
            <:actions :let={credential}>
              <div :if={can_edit?(credential, @current_user)}>
                <span>
                  <.link
                    class="table-action"
                    phx-click={
                      show_modal("transfer-credential-#{credential.id}-modal")
                    }
                  >
                    <%= case credential.transfer_status do %>
                      <% :pending -> %>
                        Revoke Transfer
                      <% :completed -> %>
                        Transfer
                      <% nil -> %>
                        Transfer
                    <% end %>
                  </.link>
                </span>
                <span>
                  <.link
                    class="table-action"
                    phx-click={
                      show_modal("edit-credential-#{credential.id}-modal")
                    }
                  >
                    Edit
                  </.link>
                </span>
                <span>
                  <.link
                    class="table-action"
                    phx-click={
                      show_modal("delete_credential_#{credential.id}_modal")
                    }
                  >
                    Delete
                  </.link>
                </span>
                <.live_component
                  id={"edit-credential-#{credential.id}-modal"}
                  module={LightningWeb.CredentialLive.CredentialFormComponent}
                  action={:edit}
                  credential_type={nil}
                  credential={credential}
                  oauth_client={
                    credential.oauth_token && credential.oauth_token.oauth_client
                  }
                  projects={@projects}
                  project={@project}
                  can_create_project_credential={@can_create_project_credential}
                  current_user={@current_user}
                  return_to={~p"/projects/#{@project.id}/settings#credentials"}
                />
                <LightningWeb.Components.Credentials.delete_credential_modal
                  :if={can_edit?(credential, @current_user)}
                  id={"delete_credential_#{credential.id}_modal"}
                  credential={credential}
                />
                <.live_component
                  id={"transfer-credential-#{credential.id}-modal"}
                  module={LightningWeb.CredentialLive.TransferCredentialModal}
                  credential={credential}
                  current_user={@current_user}
                  return_to={~p"/projects/#{@project.id}/settings#credentials"}
                />
              </div>
            </:actions>
          </LightningWeb.Components.DataTables.credentials_table>

          <.live_component
            id="new-credential-modal"
            module={LightningWeb.CredentialLive.CredentialFormComponent}
            action={:new}
            credential_type={@selected_credential_type}
            credential={
              %Lightning.Credentials.Credential{
                user_id: @current_user.id,
                project_credentials: [
                  %Lightning.Projects.ProjectCredential{
                    project_id: @project.id
                  }
                ]
              }
            }
            oauth_client={nil}
            oauth_clients={@oauth_clients}
            projects={@projects}
            project={@project}
            current_user={@current_user}
            can_create_project_credential={@can_create_project_credential}
            return_to={~p"/projects/#{@project.id}/settings#credentials"}
          />
          <.live_component
            id="new-oauth-client-modal"
            module={LightningWeb.CredentialLive.OauthClientFormComponent}
            action={:new}
            oauth_client={
              %Lightning.Credentials.OauthClient{
                user_id: @current_user.id,
                project_oauth_clients: [
                  %Lightning.Projects.ProjectOauthClient{
                    project_id: @project.id
                  }
                ]
              }
            }
            projects={@projects}
            project={@project}
            allow_global={@current_user.role === :superuser}
            can_create_oauth_client={@can_create_project_credential}
            return_to={~p"/projects/#{@project.id}/settings#credentials"}
          />
        </div>
      </:panel>
      <:panel hash="collections" class="space-y-4">
        <.live_component
          module={LightningWeb.ProjectLive.CollectionsComponent}
          id="collections"
          project={@project}
          collections={@collections}
          can_create_collection={@can_create_collection}
          return_to={~p"/projects/#{@project.id}/settings#collections"}
        />
      </:panel>
      <:panel hash="webhook_security" class="space-y-4">
        <.section_header
          title="Webhook security"
          subtitle="Webhook authentication methods that are used with the starting trigger in workflows."
          permissions_message="webhook auth methods."
          can_perform_action={@can_write_webhook_auth_method}
          action_button_text="New auth method"
          action_button_click={show_modal("new_auth_method_modal")}
          action_button_disabled={!@can_write_webhook_auth_method}
          action_button_id="add_new_auth_method"
        />
        <.live_component
          :if={@can_write_webhook_auth_method}
          module={LightningWeb.WorkflowLive.WebhookAuthMethodModalComponent}
          id="new_auth_method_modal"
          action={:new}
          project={@project}
          current_user={@current_user}
          webhook_auth_method={
            %Lightning.Workflows.WebhookAuthMethod{project_id: @project.id}
          }
          return_to={~p"/projects/#{@project.id}/settings#webhook_security"}
          trigger={nil}
        />
        <LightningWeb.WorkflowLive.Components.webhook_auth_methods_table
          auth_methods={@webhook_auth_methods}
          current_user={@current_user}
          return_to={~p"/projects/#{@project.id}/settings#webhook_security"}
          class="p-2"
        >
          <:empty_state>
            <.empty_state
              icon="hero-plus-circle"
              message="No auth methods found."
              button_text="Create a new auth method"
              button_id="open-create-auth-method-modal"
              button_click={show_modal("new_auth_method_modal")}
              button_disabled={!@can_write_webhook_auth_method}
            />
          </:empty_state>
          <:linked_triggers :let={auth_method}>
            <span class="relative font-normal">
              <a
                :if={auth_method.triggers != []}
                id={"display_linked_triggers_link_#{auth_method.id}"}
                href="#"
                class="text-indigo-600 hover:text-indigo-900"
                phx-click={
                  show_modal("display_linked_triggers_#{auth_method.id}_modal")
                }
              >
                {Enum.count(auth_method.triggers)}
              </a>
              <span
                :if={auth_method.triggers == []}
                class="italic font-normal text-gray-300"
              >
                No associated triggers...
              </span>

              <div class="text-left">
                <.live_component
                  module={
                    LightningWeb.WorkflowLive.WebhookAuthMethodModalComponent
                  }
                  id={"display_linked_triggers_#{auth_method.id}_modal"}
                  action={:display_triggers}
                  project={auth_method.project}
                  webhook_auth_method={auth_method}
                  current_user={@current_user}
                  return_to={
                    ~p"/projects/#{@project.id}/settings#webhook_security"
                  }
                  trigger={nil}
                />
              </div>
            </span>
          </:linked_triggers>
          <:action :let={auth_method}>
            <%= if @can_write_webhook_auth_method do %>
              <a
                id={"edit_auth_method_link_#{auth_method.id}"}
                href="#"
                class="table-action"
                phx-click={show_modal("edit_auth_#{auth_method.id}_modal")}
              >
                View
              </a>
              <div class="text-left">
                <.live_component
                  module={
                    LightningWeb.WorkflowLive.WebhookAuthMethodModalComponent
                  }
                  id={"edit_auth_#{auth_method.id}_modal"}
                  action={:edit}
                  project={@project}
                  current_user={@current_user}
                  webhook_auth_method={auth_method}
                  return_to={
                    ~p"/projects/#{@project.id}/settings#webhook_security"
                  }
                  trigger={nil}
                />
              </div>
            <% else %>
              <a
                id={"edit_auth_method_link_#{auth_method.id}"}
                href="#"
                class="table-action cursor-not-allowed"
              >
                Edit
              </a>
            <% end %>
          </:action>
          <:action :let={auth_method}>
            <%= if @can_write_webhook_auth_method do %>
              <a
                id={"delete_auth_method_link_#{auth_method.id}"}
                href="#"
                class="table-action"
                phx-click={show_modal("delete_auth_#{auth_method.id}_modal")}
              >
                Delete
              </a>
              <div class="text-left">
                <.live_component
                  module={
                    LightningWeb.WorkflowLive.WebhookAuthMethodModalComponent
                  }
                  id={"delete_auth_#{auth_method.id}_modal"}
                  action={:delete}
                  project={@project}
                  webhook_auth_method={auth_method}
                  current_user={@current_user}
                  return_to={
                    ~p"/projects/#{@project.id}/settings#webhook_security"
                  }
                  trigger={nil}
                />
              </div>
            <% else %>
              <a
                id={"delete_auth_method_link_#{auth_method.id}"}
                href="#"
                class="ml-1 cursor-not-allowed text-indigo-300"
              >
                Delete
              </a>
            <% end %>
          </:action>
        </LightningWeb.WorkflowLive.Components.webhook_auth_methods_table>
      </:panel>
      <:panel hash="collaboration" class="space-y-4">
        <.section_header
          title="Project collaboration"
          subtitle="View collaborators and manage alert settings for this project."
          permissions_message="collaboration settings, but you can change your notification preferences."
          can_perform_action={@can_edit_project}
          action_button_text="Add Collaborator(s)"
          action_button_click="toggle_collaborators_modal"
          action_button_disabled={
            !@can_add_project_user ||
              is_binary(get_collaborator_limit_error(@project))
          }
          action_button_tooltip={
            if(@can_add_project_user,
              do: get_collaborator_limit_error(@project),
              else: "You are not authorized to perform this action"
            )
          }
          action_button_id="show_collaborators_modal_button"
        />
        <.support_access_toggle
          can_edit_project={@can_edit_project}
          project={@project}
        />
        <.live_component
          :if={@can_add_project_user && @show_collaborators_modal}
          module={LightningWeb.ProjectLive.NewCollaboratorComponent}
          id="add_collaborators_modal"
          project={@project}
          project_users={@project_users}
        />
        <.live_component
          :if={@can_add_project_user && @show_invite_collaborators_modal}
          module={LightningWeb.ProjectLive.InviteCollaboratorComponent}
          id="invite_collaborators_modal"
          project={@project}
          project_users={@project_users}
          collaborators={@collaborators_to_invite}
          current_user={@current_user}
        />
        <LightningWeb.Components.DataTables.collaborators_table
          id="collaborators"
          project_users={@project_users}
          current_user={@current_user}
          can_remove_project_user={@can_remove_project_user}
          can_receive_failure_alerts={@can_receive_failure_alerts}
        >
          <:actions :let={project_user}>
            <div class="text-right">
              <.button
                id={"remove_project_user_#{project_user.id}_button"}
                type="button"
                phx-click={show_modal("remove_#{project_user.id}_modal")}
                class="gap-x-2 rounded-md px-3.5 py-2.5 text-sm shadow-xs ring-1 ring-inset ring-gray-300 disabled:cursor-not-allowed"
                tooltip={
                  remove_user_tooltip(
                    project_user,
                    @current_user,
                    @can_remove_project_user
                  )
                }
                disabled={
                  !user_removable?(
                    project_user,
                    @current_user,
                    @can_remove_project_user
                  )
                }
              >
                <.icon name="hero-minus-circle" class="w-5 h-5" />
                Remove Collaborator
              </.button>
            </div>
            <.confirm_user_removal_modal
              :if={
                user_removable?(
                  project_user,
                  @current_user,
                  @can_remove_project_user
                )
              }
              id={"remove_#{project_user.id}_modal"}
              project_user={project_user}
            />
          </:actions>
          <:empty_state>
            <.empty_state
              icon="hero-plus-circle"
              message="No collaborators found."
              button_text="Add a collaborator"
              button_id="open-add-collaborator-modal"
              button_click="toggle_collaborators_modal"
              button_disabled={!@can_edit_project}
            />
          </:empty_state>
        </LightningWeb.Components.DataTables.collaborators_table>
      </:panel>
      <:panel hash="security" class="space-y-4">
        <.section_header
          title="Project security"
          subtitle="View and manage security settings for this project."
          permissions_message="multi-factor authentication settings."
          can_perform_action={@can_edit_project}
        />
        <div>
          <%= if assigns[:mfa_banner] do %>
            {Phoenix.LiveView.TagEngine.component(
              @mfa_banner.function,
              @mfa_banner.attrs,
              {__ENV__.module, __ENV__.function, __ENV__.file, __ENV__.line}
            )}
          <% end %>
        </div>
        <div class="bg-white p-4 rounded-md space-y-4">
          <div class="flex items-center justify-between">
            <span class="flex flex-grow flex-col">
              <span
                class="text-sm font-medium leading-6 text-gray-900"
                id="mfa-label"
              >
                Multi-Factor Authentication
              </span>
              <span class="text-sm text-gray-500" id="mfa-description">
                Requiring multi-factor authentication (MFA) adds an
                additional layer of security by requiring users to enable
                MFA on their accounts before they are allowed access this
                project.
              </span>
            </span>
          </div>
          <div>
            <h6 class="font-medium text-black"></h6>
            <p class="block text-xs text-gray-600"></p>
            <div class="flex items-center">
              <button
                id="toggle-mfa-switch"
                type="button"
                class={"#{if @project.requires_mfa, do: "bg-indigo-600", else: "bg-gray-200"} #{if !@can_edit_project, do: "cursor-not-allowed opacity-50", else: "cursor-pointer"} relative inline-flex h-6 w-11 shrink-0 rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-indigo-600 focus:ring-offset-2"}
                role="switch"
                disabled={!@can_require_mfa}
                phx-click="toggle-mfa"
                aria-checked={@project.requires_mfa}
                aria-labelledby="require-mfa-label"
                aria-describedby="require-mfa-description"
                {if !@can_edit_project, do: ["phx-hook": "Tooltip", "data-placement": "bottom", "aria-label": "You do not have permission to perform this action"], else: []}
              >
                <span
                  aria-hidden="true"
                  class={"#{if @project.requires_mfa, do: "translate-x-5", else: "translate-x-0"} pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out"}
                >
                </span>
              </button>
              <span class="ml-3 text-sm" id="require-mfa-label">
                <span class="font-medium text-gray-900">Require MFA?</span>
                <span class="text-gray-500">
                  <%= if @project.requires_mfa do %>
                    (currently required for this project)
                  <% else %>
                    (currently optional for this project)
                  <% end %>
                </span>
              </span>
            </div>
          </div>
        </div>
      </:panel>
      <:panel hash="vcs" class="space-y-4">
        <.section_header
          title="Version control"
          subtitle="View or modify external version control settings for this project."
          permissions_message={"version control configuration#{@can_initiate_github_sync && " but you can initiate a sync." || "."}"}
          can_perform_action={@can_install_github}
        />
        <div>
          <%= if assigns[:github_banner] do %>
            {Phoenix.LiveView.TagEngine.component(
              @github_banner.function,
              @github_banner.attrs,
              {__ENV__.module, __ENV__.function, __ENV__.file, __ENV__.line}
            )}
          <% end %>
        </div>
        <%= if  @github_enabled do %>
          <%= if @project_repo_connection do %>
            <.live_component
              id="github-sync-component"
              module={LightningWeb.ProjectLive.GithubSyncComponent}
              user={@current_user}
              project_repo_connection={@project_repo_connection}
              project={@project}
              action={:show}
              can_install_github={@can_install_github}
              can_initiate_github_sync={@can_initiate_github_sync}
              actions_disabled={is_map(assigns[:github_banner])}
              actions_disabled_tooltip={
                is_map(assigns[:github_banner]) &&
                  Map.get(assigns[:github_banner], :text)
              }
            />
          <% else %>
            <div :if={@can_install_github}>
              <.live_component
                :if={user_has_valid_oauth_token(@current_user)}
                id="github-sync-component"
                module={LightningWeb.ProjectLive.GithubSyncComponent}
                user={@current_user}
                project_repo_connection={
                  %VersionControl.ProjectRepoConnection{
                    project_id: @project.id
                  }
                }
                project={@project}
                action={:new}
                can_install_github={@can_install_github}
                can_initiate_github_sync={@can_initiate_github_sync}
                actions_disabled={is_map(assigns[:github_banner])}
                actions_disabled_tooltip={
                  is_map(assigns[:github_banner]) &&
                    Map.get(assigns[:github_banner], :text)
                }
              />
              <div
                :if={!user_has_valid_oauth_token(@current_user)}
                class="bg-white p-4 rounded-md"
              >
                <h6 class="font-medium text-black">
                  Connect your OpenFn account to GitHub
                </h6>
                <small class="block mt-1 text-xs text-gray-600">
                  To create a new GitHub version control connection you must first connect your OpenFn account to GitHub.
                  Please click the button below to get started.
                </small>
                <div class="mt-6">
                  <GithubComponents.connect_to_github_link
                    id="connect-github-link"
                    user={@current_user}
                    disabled={is_map(assigns[:github_banner])}
                  />
                </div>
              </div>
            </div>
          <% end %>
        <% else %>
          <div class="bg-white p-4 rounded-md">
            <h6 class="font-medium text-black">
              Sync to GitHub
            </h6>
            <small class="block mt-1 text-xs text-gray-600">
              Version Control is not configured for this Lightning instance. Contact the superuser for more information.
            </small>
          </div>
        <% end %>
        <div class="mt-2">
          Need to learn more about Github Sync?
          See
          <.link
            target="_blank"
            href="https://docs.openfn.org/documentation/deploy/portability#automated-version-control-with-github-and-lightning"
            class="link"
          >
            portability docs
          </.link>
          for full documentation on associated GitHub actions and automated workflows.
        </div>
      </:panel>
      <:panel hash="data-storage" class="space-y-4">
        <.section_header
          title="Data storage"
          subtitle="View or modify data storage settings for this project."
          permissions_message="data storage settings."
          can_perform_action={@can_edit_data_retention}
        />
        <div class="bg-white p-4 rounded-md">
          <.form
            :let={f}
            for={@project_changeset}
            id="retention-settings-form"
            phx-change="validate"
            phx-submit="save_retention_settings"
          >
            <div class="space-y-6">
              <div>
                <div class="text-black text-sm">
                  <div class="font-medium">
                    History Retention Period
                  </div>
                  <div class="block mt-1 mb-3">
                    Select how long your run history is stored in OpenFn before being removed from the servers.
                    <a
                      target="_blank"
                      href="https://docs.openfn.org/documentation/manage-projects/retention-periods"
                      class="link ml-1"
                    >
                      Learn more
                    </a>
                    <br /> This includes all Work Orders, Runs, and Logs.
                  </div>
                </div>

                <div class="flex gap-4 items-center">
                  <.input
                    type="select"
                    prompt="Select Period"
                    options={
                      Enum.map(@data_retention_periods, fn days ->
                        {"#{days} Days", days}
                      end)
                    }
                    disabled={
                      !@can_edit_data_retention ||
                        Enum.count(@data_retention_periods) == 1
                    }
                    field={f[:history_retention_period]}
                    class="border-gray-300 focus:ring-indigo-600"
                  />
                  <div class="text-xs">
                    <%= case assigns[:data_retention_limit_message] do %>
                      <% %{function: func} when is_function(func) -> %>
                        {Phoenix.LiveView.TagEngine.component(
                          @data_retention_limit_message.function,
                          @data_retention_limit_message.attrs,
                          {__ENV__.module, __ENV__.function, __ENV__.file,
                           __ENV__.line}
                        )}
                      <% %{text: text} when is_binary(text) -> %>
                        <span>{text}</span>
                      <% _other -> %>
                        <span></span>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="inset-0 flex items-center" aria-hidden="true">
                <div class="w-full border-t border-gray-300"></div>
              </div>
              <div>
                <div class="text-black text-sm">
                  <div class="font-medium">
                    Input/Output Data Storage Policy
                  </div>
                  <div class="block mt-1 mb-3">
                    Should OpenFn store input/output data for workflow runs?
                    <a
                      target="_blank"
                      href="https://docs.openfn.org/documentation/manage-projects/io-data-storage"
                      class="link ml-1"
                    >
                      Learn more
                    </a>
                  </div>
                </div>

                <div class="space-y-2">
                  <%!-- TODO: add this to the list of options for https://github.com/OpenFn/Lightning/issues/1694 --%>
                  <%!-- {:retain_with_errors, "Only retain input/output data when a run fails"}, --%>
                  <%= for {value, text} <- [
                  {:retain_all, "Retain input/output data for all workflow runs"},
                  {:erase_all, "Never retain input/output data (zero-persistence)"}
                  ] do %>
                    <div class="relative flex items-start">
                      <div class="flex h-6 items-center">
                        <.input
                          type="radio"
                          id={value}
                          disabled={!@can_edit_data_retention}
                          field={f[:retention_policy]}
                          checked={checked?(@project_changeset, value)}
                          value={value}
                          class="h-4 w-4 border-gray-300 text-indigo-600 focus:ring-indigo-600"
                        />
                      </div>
                      <div class="ml-3 leading-6">
                        <label for={value} class="text-sm text-neutral-950">
                          {text}
                        </label>
                      </div>
                    </div>
                  <% end %>
                </div>
                <Common.alert
                  :if={not checked?(@project_changeset, :retain_all)}
                  id="heads-up-description"
                  type="warning"
                  header="Heads Up!"
                  class="mt-2"
                >
                  <:message>
                    <p>
                      When enabled, you will no longer be able to retry workflow runs as no data will be stored.
                    </p>
                  </:message>
                </Common.alert>
              </div>
              <div class="inset-0 flex items-center" aria-hidden="true">
                <div class="w-full border-t border-gray-300"></div>
              </div>
              <div>
                <div class={"text-black text-sm #{if to_string(f[:history_retention_period].value) == "" or checked?(@project_changeset, :erase_all), do: "text-black/30"}"}>
                  <div class="font-medium">
                    Input/Output Data Retention Period
                  </div>
                  <div class="block mt-1 mb-3">
                    Select how long input/output data is stored. Once input/output data is removed for a given run, you will no longer
                    be able to retry that run.
                  </div>
                </div>

                <div class="flex space-y-2">
                  <.input
                    type="select"
                    prompt="Select Period"
                    options={
                      Enum.map(@data_retention_periods, fn days ->
                        {"#{days} Days", days}
                      end)
                    }
                    disabled={
                      !@can_edit_data_retention or
                        to_string(f[:history_retention_period].value) == "" or
                        checked?(@project_changeset, :erase_all)
                    }
                    field={f[:dataclip_retention_period]}
                    class="border-gray-300 ocus:ring-indigo-600"
                  />
                </div>
              </div>
              <div class="mt-4">
                <.button
                  type="button"
                  disabled={!@can_edit_data_retention}
                  theme="secondary"
                  class="mr-1"
                  phx-click="cancel-retention-change"
                >
                  Cancel
                </.button>
                <.button
                  id="input-output-retention-period-submit-btn"
                  type="submit"
                  theme="primary"
                  disabled={
                    not @project_changeset.valid? or
                      not @can_edit_data_retention
                  }
                  phx-disable-with="Saving"
                >
                  Save
                </.button>
              </div>
            </div>
          </.form>
        </div>
      </:panel>
      <:panel hash="history-exports" class="space-y-4">
        <.section_header
          title="History exports"
          subtitle="View export status and download work order history for this project."
          permissions_message="history exports."
          can_perform_action={true}
        />
        <LightningWeb.Components.DataTables.history_exports_table
          id="project_users_table"
          project_files={@project_files}
        >
          <:actions :let={file}>
            <%= if file.status == :completed do %>
              <.link
                id={"download-export-file-#{file.id}-button"}
                href={~p"/project_files/#{file.id}/download"}
                target="_blank"
                class="table-action py-2 px-4"
              >
                Download
              </.link>
            <% else %>
              <.button
                id={"download-export-file-#{file.id}-button"}
                disabled={true}
                class="table-action disabled:bg-gray-50"
                tooltip="Export is not yet ready for download"
              >
                Download
              </.button>
            <% end %>
          </:actions>
          <:empty_state>
            <.empty_state
              icon="hero-folder-arrow-down"
              message="No history exports found for this project."
              interactive={false}
            />
          </:empty_state>
        </LightningWeb.Components.DataTables.history_exports_table>
      </:panel>
    </LightningWeb.Components.Tabbed.container>
  </LayoutComponents.centered>
</LayoutComponents.page_content>
